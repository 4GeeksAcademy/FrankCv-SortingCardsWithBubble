/* eslint-disable */
import "bootstrap";
import "./style.css";

import "./assets/img/rigo-baby.jpg";
import "./assets/img/4geeks.ico";

window.onload = function() {
  //write your code here
  let suit = [`spade`, `heart`, `diamond`, `club`];
  let numberCard = [
    `1`,
    `2`,
    `3`,
    `4`,
    `5`,
    `6`,
    `7`,
    `8`,
    `9`,
    `10`,
    `J`,
    `Q`,
    `K`
  ];
  let drawButton = document.getElementById("drawButton");
  let sortButton = document.getElementById("sortButton");
  let drawCards = document.querySelector("#drawCards");
  let inputNumber = document.getElementById("inputNumber"); //let card = document.createElement(``);
  let generalContainer = document.querySelector("#generalContainer");
  //Event Listener when i click draw button
  drawButton.addEventListener("click", function() {
    let inputValue = inputNumber.value;
    drawCards.innerHTML = "";
    for (let i = 0; i < inputValue; i++) {
      let randomSuit = Math.floor(Math.random() * (suit.length - 1));
      let randomNumber = Math.floor(Math.random() * (numberCard.length - 1));
      let colorCard = "";
      suit[randomSuit] === `spade` || suit[randomSuit] === `club`
        ? (colorCard = "black")
        : (colorCard = "red");
      let card = document.createElement(`div`);
      //
      let htmlCard = ` <div class="card shadow-lg p-2 mb-5 bg-body-tertiary rounded">
                            <div class="card-body p-0">
                              <div class="d-flex justify-content-start  mb-1">
                                <i class="bi bi-suit-${suit[randomSuit]}" style="color:${colorCard}"></i>
                              </div>
                              <div class="d-flex justify-content-center" style="color:${colorCard}">${numberCard[randomNumber]}</div>
                              <div class="d-flex justify-content-end  mt-1">
                                <i class="bi bi-suit-${suit[randomSuit]}" style="color:${colorCard}"></i>
                              </div>
                            </div>
                          </div>
                        `;
      card.className = "col-1";
      card.style = "max-width:100px";
      //We pass HTML inside the div.col-1 just created
      card.innerHTML = htmlCard;
      drawCards.appendChild(card);
    }
  });

  sortButton.addEventListener("click", () => {
    //Get all children from drawCrads (the raw with all cards generated by draw)
    let containerShuffle = document.querySelectorAll(`.shuffle`);
    containerShuffle.forEach(e => e.remove());

    let allCards = [];
    allCards = [...drawCards.children];
    console.log(bubbleSort(allCards));
    //all numbers gotten by allCards Array
  });

  const bubbleSort = arr => {
    let wall = arr.length - 1; //we start the wall at the end of the array

    while (wall > 0) {
      let index = 0;
      let row = document.createElement(`div`);
      row.className = "row shuffle"; // console.log(`row created`);
      while (index < wall) {
        //compare the adjacent positions, if the right one is bigger, we have to swap
        if (
          parseInt(convertAtoStringNumber(arr[index].innerText)) >
          parseInt(convertAtoStringNumber(arr[index + 1].innerText))
        ) {
          //let row = document.getElementById(`row${index}`);
          let aux = arr[index];
          arr[index] = arr[index + 1];
          arr[index + 1] = aux;
          console.log(`add card`);
        }
        index++;
      }
      //get all innerhtml from arr (array) received
      let getInnerHtml = arr => {
        let allHtml = "";
        for (let j = 0; j < arr.length; j++) {
          allHtml += `<div class="col-1" style = "max-width:100px" >${arr[j].innerHTML}</div>`;
        }
        return allHtml;
      };
      for (let j = 0; j < arr.length; j++) {
        arr.innerHTML;
      }
      row.innerHTML = `${getInnerHtml(arr)}`;
      generalContainer.appendChild(row);
      wall--; //decrease the wall for optimization
    }
    return arr;
  };
  let convertAtoStringNumber = num => {
    switch (num) {
      case `A`:
        num = `1`;
        break;
      case `J`:
        num = `11`;
        break;
      case `Q`:
        num = `12`;
        break;
      case `K`:
        num = `13`;
        break;
      default:
        num = num;
        break;
    }
    return num;
  };
};
